"""
Adds battle to the script
"""




class Hero(object):


    def __init__(self):
        pass

    def inventory(self):

        """
        Hierin bijhouden welke items de speler heeft.
        Bepaalde "Items" zullen in inventory moeten zitten voordat een quest of dergelijke
        voltooid kan worden.
        """
        pass

    def champion(self):
        """
        Basis van de character die later in de code die later
        aangepast kunnen worden via functies of lambda's

        Health, Armor en Strenght scaled met Level.
        """

        self.level = 5
        self.name = raw_input("What is your name? ")
        self.health = 100
        self.armor = 0
        self.strength = 5 + int(self.level *1.5)
        self.exp = 0


class Skeleton(Hero):

    def __init__(self):

        self.health = int(20 + int(hero.level) * 2)
        self.strength = int(1 + int(hero.level) * 0.5)
        self.exp_gain = 10

        """

        Health van Skeleton scaled op basis van Hero.Level

        """




hero = Hero()
hero.champion()
skeleton = Skeleton()
def show_stats():
    print "Name: " + hero.name
    print "Level: " + str(hero.level)
    print "Health: " + str(hero.health)
    print "Armor: " + str(hero.armor)
    print "Strength: " + str(hero.strength)

def battle(skeleton):

    while skeleton.health >= 0:
        print " Battle "
        print ""
        print ""
        print "1. Attack"
        print "2. Check inventory"
        move = raw_input("Pick your move")
        if move == "1" or "1.":

            print "You strike the skeleton, dealing " + str(hero.strength) + " Damage"
            skeleton.health = (skeleton.health) - (hero.strength)
            print ""
            print ""
            print "Skeleton now has " + str(skeleton.health) + " Health remaining"
    else:
        print "Skeleton is down, you recieve 10 Exp"
        hero.exp = (hero.exp) + (skeleton.exp_gain)
        if str(hero.exp == "100"):
            print "LEVEL UP"
            hero.level = +1
            print "Hero level: " + str(hero.level)
        print ""
        print "your experience is now: " + str(hero.exp) + " of 100"




show_stats()
print "You encounter a skeleton"
battle(skeleton)


